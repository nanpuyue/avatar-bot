name: build avatar-bot-builder

on:
  workflow_dispatch:

env:
  PACKAGE_NAME: avatar-bot-builder
  REGISTRY_IMAGE: ghcr.io/nanpuyue/avatar-bot-builder

jobs:
  build:
    name: build for ${{ matrix.platform }} on ${{ matrix.label }}
    runs-on: ${{ matrix.label }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            label: ubuntu-latest
          - platform: linux/arm64
            label: self-hosted
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value={{date 'YYYYMMDD'}}
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Build and push Docker images
        id: build
        uses: docker/build-push-action@v5
        with:
          context: builder
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Export digest
        run: |
          mkdir -p ./digests
          digest="${{ steps.build.outputs.digest }}"
          touch "./digests/${digest#sha256:}"          
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: ./digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: merge multi-platform images
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: ./digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=true
          tags: |
            type=raw,value={{date 'YYYYMMDD'}}
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: ./digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")\
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
